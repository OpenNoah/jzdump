#!/bin/sh

# Mount file systems
mount -t proc /proc /proc
mount -t sysfs sysfs /sys
mount -t tmpfs tmpfs /dev

# Create essential devices
mkdir /dev/pts
mknod /dev/console c 5 1
mknod /dev/null c 1 3

#udevd --daemon
udevstart

echo -e '\033[0m\033[2J\033[HFirst stage initramfs loader' > /dev/tty0

# Setup USB network for debugging
insmod /lib/modules/jz4740_udc.ko use_dma=0
insmod /lib/modules/g_ether.ko

ip addr add 192.168.2.2/24 dev usb0
ip link set usb0 up
ip route add default via 192.168.2.1

telnetd -l /bin/sh

# Wait for SD card
echo 'Detecting SD card...' > /dev/tty0
timeout=20
until [ -b /dev/mmcblk0 ]; do
	sleep 1
	timeout=`expr $timeout - 1`
	udevstart
	[ $timeout == 0 ] && break;
done

# Try to mount a fat32 partition from SD card
if [ -b /dev/mmcblk0 ]; then
	echo 'Mounting SD card...' > /dev/tty0
	for f in /dev/mmcblk0*; do
		mount $f /mnt/mmc -t vfat -o iocharset=cp936,codepage=936 && break
	done
fi

# Check upgrade.bin exists
img=/mnt/mmc/upgrade.bin
if [ -f $img ]; then
	# Find section to be mounted on root
	echo 'Mounting second stage initfs...' > /dev/tty0
	pkginfo $img | tail -n+2 | while read idx ver dev fs off size crc; do (
		set -e
		[ x"$dev" == x"/" ]
		lo=$(losetup -f)
		losetup -fo $(($off)) $img
		mount -t ext2 -o ro $lo /mnt/root || losetup -d "$lo"
	) done
fi

# Check rootfs mounted
if [ -f /mnt/root/init ]; then
	# Success, confirm switching root
	echo "Press any key in 1 second to abort root switching..."
	if ! read -t1 -n1 key; then
		# Prepare to switch root
		echo 'Switching root...' > /dev/tty0
		killall telnetd
		ip link set usb0 down
		rmmod g_ether
		rmmod jz4740_udc
		# Now, switch root
		umount -l /mnt/mmc
		umount -l /dev
		umount -l /sys
		umount -l /proc
		exec switch_root /mnt/root /init
	fi
fi

# Error fallback, drop serial port to init shell
echo -e '\033[1;31mLoader failed!' > /dev/tty0
PS1="(initramfs) \w \$ " exec /bin/sh
