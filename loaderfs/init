#!/bin/sh

# Mount file systems
mount -t proc /proc /proc
mount -t sysfs sysfs /sys
mount -t tmpfs tmpfs /dev
mount -t tmpfs tmpfs /tmp

# Create essential devices
mkdir /dev/pts
mknod /dev/console c 5 1
mknod /dev/null c 1 3

#udevd --daemon
udevstart

echo -e '\033[0m\033[2J\033[HSecond stage loaderfs loader' > /dev/tty0

# Setup USB network for debugging
insmod /lib/modules/jz4740_udc.ko use_dma=0
insmod /lib/modules/g_ether.ko

ip addr add 192.168.2.2/24 dev usb0
ip link set usb0 up
ip route add default via 192.168.2.1

telnetd -l /bin/sh

. /etc/profile

# More modules
#insmod /lib/modules/ubi.ko
#insmod /lib/modules/ubifs.ko

udevstart

# Calibrate touch screen
if [ ! -f /etc/pointercal ]; then
	echo 'Calibrate touch screen...' > /dev/tty0
	rm -f /tmp/pointercal
	ts_calibrate
fi

# Wait for SD card
echo 'Detecting SD card...' > /dev/tty0
# Not checking /proc/jz/mmc because this FS should be loaded from SD card
timeout=20
until [ -b /dev/mmcblk0 ]; do
	sleep 1
	timeout=`expr $timeout - 1`
	udevstart
	[ $timeout == 0 ] && break;
done

# Try to mount a fat32 partition from SD card
if [ -b /dev/mmcblk0 ]; then
	echo 'Mounting SD card...' > /dev/tty0
	for f in /dev/mmcblk0*; do
		mount $f /mnt/mmc -t vfat -o iocharset=cp936,codepage=936 && break
	done
fi

# Mount NAND ubi rootfs
echo 'Attaching NAND rootfs...' > /dev/tty0
mtd="$(cat /proc/mtd | fgrep ROOT)"
if ubiattach -m "${mtd:3:1}" /dev/ubi_ctrl; then
	udevstart
fi

# Show GUI application
echo 'Starting GUI application...' > /dev/tty0
rm -f /tmp/init
syssw -qws

# Check rootfs
echo 'Checking rootfs...' > /dev/tty0
init="$(cat /tmp/init)"
if [ -x "/mnt/root/$init" ] && [ -f "/mnt/root/$init" ]; then
	# Prepare to switch root
	echo "Switching root: /mnt/root $init" > /dev/tty0
	killall telnetd
	ip link set usb0 down
	rmmod g_ether
	rmmod jz4740_udc
	# Now, switch root
	umount -l /mnt/mmc
	umount -l /tmp
	umount -l /dev
	umount -l /sys
	umount -l /proc
	cd /mnt/root
	pivot_root . tmp
	# Unmount old root and free loop device
	exec chroot . sh -c "
	umount -l /tmp
	mount -t tmpfs tmpfs /tmp
	mknod /tmp/loop0 b 7 0
	losetup -d /tmp/loop0
	umount -l /tmp
	exec $init" < /dev/console > /dev/console 2>&1
fi

# Drop serial port to init shell
echo -e '\033[1;31mDropped to serial port console' > /dev/tty0
PS1="(loaderfs) \w \$ " exec /bin/sh
